from flask import Flask, request, jsonify, render_template
from flask import send_from_directory
import os
from openai import AzureOpenAI
from dotenv import load_dotenv
load_dotenv()

# Load the Azure OpenAI API key from the environment variables
client = AzureOpenAI(
  azure_endpoint = "https://escola42.openai.azure.com/", 
  api_key=os.getenv("AZURE_OPENAI_API_KEY"),  
  api_version="2024-02-15-preview"
)

# https://escola42.openai.azure.com/openai/deployments/london_is_best/completions?api-version=2024-02-15-preview

CHAT_COMPLETIONS_MODEL = os.getenv('CHAT_COMPLETION_NAME')
SEED=123
OUTPUT_FOLDER = './out'

app = Flask(__name__)

"""
Endpoint to generate test cases from user story
Method: POST
Parameters:	user_story: string or file
Returns:	test_cases: string
"""
@app.route('/', methods=['POST'])
def generate_test_cases():

	print('ARGUMENTS: ', request.args)
	print('FILES: ', request.files)

	user_story = ''

	# Check if the request contains a file
	if 'file' in request.files:
		file = request.files['file']
		user_story = file.read().decode('utf-8')
		print('GOT FILE')
	else:
		# Read plain text from request
		user_story = request.form.get('text')
		print('GOT TEXT')

	#Remove every &nbsp; from the user story
	user_story = user_story.replace('&nbsp;', ' ')

	# Read system_message from file
	with open('system_message.txt', 'r') as file:
		system_message = file.read()

	message_text = [{"role":"system","content": system_message}, {"role":"user","content": user_story}]

	response = client.chat.completions.create(
	model="london_is_best",
	messages = message_text,
	temperature=0.5,
	max_tokens=4096,
	top_p=0.95,
	frequency_penalty=0,
	presence_penalty=0,
	stop=None
	)

	# Extracting generated test cases from the completion
	test_cases = response.choices[0].message.content
	data = jsonify({"test_cases": test_cases})

	# write test_cases in a file
	with open(OUTPUT_FOLDER + '/test_cases.txt', 'w') as file:
		file.write(test_cases)

	html_response = f"""
    <html>
    <head>
        <title>Test Cases</title>
    </head>
    <body>
        <h1>Generated Test Cases</h1>
        <h2>User Story:</h2>
        <pre>{test_cases}</pre>
    </body>
    </html>
    """

	# Returns the test cases generated by the model
	return html_response

"""
Endpoint to return index.html
Parameters:	None
Returns:	index.html
"""
@app.route('/index.html', methods=['GET'])
def get_index():
	return send_from_directory('static', 'index.html')

if __name__ == '__main__':
	app.run(debug=True)
